{
    "benchmark_AtomicSuite.Atomic.time_common_isotopes": {
        "code": "class Atomic:\n    def time_common_isotopes(self):\n        common_isotopes('H')\n        common_isotopes('Fe')\n        common_isotopes('Fe', most_common_only=True)\n        common_isotopes()[0:7]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_common_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c599e772397507cc1865167b14902c1c63b9c18699cdc725d4f53c206a564603",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_known_isotopes": {
        "code": "class Atomic:\n    def time_known_isotopes(self):\n        known_isotopes('H')\n        known_isotopes('helium 1+')\n        known_isotopes()[0:10]\n        known_isotopes()[4:15]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_known_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "98c888d9f156c11a5ed4c04e7b5efdd9665e81e4ef4d7838da17367c31748ef9",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_reduced_mass": {
        "code": "class Atomic:\n    def time_reduced_mass(self):\n        reduced_mass('p+', 'e-')\n        reduced_mass(5.4e-27 * u.kg, 8.6e-27 * u.kg)\n        reduced_mass(6.4e-10 * u.kg, 8.6e-11 * u.kg)\n        reduced_mass(1.4e-10 * u.kg, 2.6e-40 * u.kg)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_reduced_mass",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2f2f48dc27c8b9ca8d1eee2454fea060cbca17d5c8b7b0a10bcb913581ebd8ec",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_stable_isotopes": {
        "code": "class Atomic:\n    def time_stable_isotopes(self):\n        stable_isotopes('beryllium')\n        stable_isotopes('Pb-209')\n        stable_isotopes(118)\n        stable_isotopes('U', unstable=True)[:5]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_stable_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "aa6132f3e3fc0a64cd47850caaf763bafd382168824538edf9e64b1defb1ea23",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.dielectric.time_cold_plasma_permittivity_LRP": {
        "code": "class dielectric:\n    def time_cold_plasma_permittivity_LRP(self):\n        permittivity = S, D, P = cold_plasma_permittivity_LRP(\n                                                             dielectric.B,\n                                                             dielectric.species,\n                                                             dielectric.n,\n                                                             dielectric.omega)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.dielectric.time_cold_plasma_permittivity_LRP",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3879be01b6ba0ab9af8a78e03c941b347b8226c892504f641db0756b3a4cd759",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.dielectric.time_cold_plasma_permittivity_SDP": {
        "code": "class dielectric:\n    def time_cold_plasma_permittivity_SDP(self):\n        permittivity = S, D, P = cold_plasma_permittivity_SDP(\n                                                             dielectric.B,\n                                                             dielectric.species,\n                                                             dielectric.n,\n                                                             dielectric.omega)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.dielectric.time_cold_plasma_permittivity_SDP",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2da3db9003a255a70401fbd3a0055180e6b6adfab28f2af53e7f6a7936c007fa",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.dielectric.time_permittivity_1D_Maxwellian": {
        "code": "class dielectric:\n    def time_permittivity_1D_Maxwellian(self):\n        permittivity_1D_Maxwellian(dielectric.omega,\n                                   dielectric.kWave,\n                                   dielectric.T,\n                                   dielectric.n_permittivity_1D_Maxwellian,\n                                   dielectric.particle,\n                                   dielectric.z_mean)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.dielectric.time_permittivity_1D_Maxwellian",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "76370389ab1cd9ade3791e5a8d4b93aedfb39c51ef23199e825f110b6eba234f",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.dimensionless.time_beta": {
        "code": "class dimensionless:\n    def time_beta(self):\n        beta(1*u.eV, 1e20*u.m**-3, 1*u.T)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.dimensionless.time_beta",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3ff38a90670f2d71ee8f016e44818dd20e49016ecc63d6e73bc2a5aa3cf24778",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.dimensionless.time_quantum_theta": {
        "code": "class dimensionless:\n    def time_quantum_theta(self):\n        quantum_theta(1*u.eV, 1e20*u.m**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.dimensionless.time_quantum_theta",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "f14674e8ef8506bb885f086b7171566a692d6c9d5be1cbc2da7d80df84543114",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_1D": {
        "code": "class distribution:\n    def time_Maxwellian_1D(self):\n        Maxwellian_1D(v=1*u.m/u.s,\n                     T=30000 * u.K,\n                     particle='e',\n                     v_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_1D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9c56e0c23c1fe404e0d4b6f1a25f5952e3b68275c9509ef3f4c493a7b1cef7c6",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_1D": {
        "code": "class distribution:\n    def time_Maxwellian_speed_1D(self):\n        Maxwellian_speed_1D(v=1 * u.m / u.s,\n                            T=30000 * u.K,\n                            particle='e',\n                            v_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_1D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "576c5014d72a39e4fc94ffa878d6bb1065cb1c544e66269dbec9fc082bbe26ea",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_2D": {
        "code": "class distribution:\n    def time_Maxwellian_speed_2D(self):\n        Maxwellian_speed_2D(v=1 * u.m / u.s,\n                            T=30000 * u.K,\n                            particle='e',\n                            v_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_2D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "a5e4b5336aa0e2cfcd900ac472c8a053015c20c96e6385e0517f26f4a459735b",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_3D": {
        "code": "class distribution:\n    def time_Maxwellian_speed_3D(self):\n        Maxwellian_speed_3D(v=1 * u.m / u.s,\n                            T=30000*u.K,\n                            particle='e',\n                            v_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_speed_3D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "6fc4c6b7ce1d3c7980d29dfaefe8e71f8488de6a28c3ae92ad0c6207ac3d5add",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_velocity_2D": {
        "code": "class distribution:\n    def time_Maxwellian_velocity_2D(self):\n        Maxwellian_velocity_2D(vx=1 * u.m / u.s,\n                               vy=1 * u.m / u.s,\n                               T=30000*u.K,\n                               particle='e',\n                               vx_drift=0 * u.m / u.s,\n                               vy_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_velocity_2D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "e17e08db80ff908a85baf88a120bf51df36d3ff63d05f7575602314161ad8f11",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_Maxwellian_velocity_3D": {
        "code": "class distribution:\n    def time_Maxwellian_velocity_3D(self):\n        Maxwellian_velocity_3D(vx=1 * u.m / u.s,\n                               vy=1 * u.m / u.s,\n                               vz=1 * u.m / u.s,\n                               T=30000 * u.K,\n                               particle='e',\n                               vx_drift=0 * u.m / u.s,\n                               vy_drift=0 * u.m / u.s,\n                               vz_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_Maxwellian_velocity_3D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0895abf5c5deeb86b79b6214365e044993431891586f85fc0e7002df48096ea5",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_kappa_velocity_1D": {
        "code": "class distribution:\n    def time_kappa_velocity_1D(self):\n        kappa_velocity_1D(v=1 * u.m / u.s,\n                          T=30000*u.K,\n                          kappa=4,\n                          particle='e',\n                          v_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_kappa_velocity_1D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "97c1f16e783ec7b2c4e3c630fb81a1096959bbc14ce1107b2d7d941e3f7ee28d",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.distribution.time_kappa_velocity_3D": {
        "code": "class distribution:\n    def time_kappa_velocity_3D(self):\n        kappa_velocity_3D(vx=1 * u.m / u.s,\n                          vy=1 * u.m / u.s,\n                          vz=1 * u.m / u.s,\n                          T=30000 * u.K,\n                          kappa=4,\n                          particle='e',\n                          vx_drift=0 * u.m / u.s,\n                          vy_drift=0 * u.m / u.s,\n                          vz_drift=0 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.distribution.time_kappa_velocity_3D",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "25733aa6492e5828d89208116db2f5198410e8d1e247f128926abd1e0660ef9a",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.mathematics.time_Fermi_integral": {
        "code": "class mathematics:\n    def time_Fermi_integral(self):\n        Fermi_integral(1, 0)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.mathematics.time_Fermi_integral",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "e353f432fe48f35a1f24497d20d4e383df8bc2ad606e4bca7c0959f4688d8b6c",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.mathematics.time_plasma_dispersion_func": {
        "code": "class mathematics:\n    def time_plasma_dispersion_func(self):\n        plasma_dispersion_func(-1.52+0.47j)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.mathematics.time_plasma_dispersion_func",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "9e11a9b1761f106a6933b369cf363e180caae9d9f7caad0b8e93d70a1b6eef42",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.mathematics.time_plasma_dispersion_func_deriv": {
        "code": "class mathematics:\n    def time_plasma_dispersion_func_deriv(self):\n        plasma_dispersion_func_deriv(-1.52+0.47j)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.mathematics.time_plasma_dispersion_func_deriv",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "767c61ab31f854d01be753c13da3ca963161745a77e4296abfc70d201c606698",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_Alfven_speed": {
        "code": "class parameters:\n    def time_Alfven_speed(self):\n        Alfven_speed(1 * u.T,\n                    1e-8 * u.kg * u.m ** -3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_Alfven_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "45b174b183ede3a81634f3c46f7e9796f1c85075c37a84cb71050d6e2ee73ed5",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_Debye_length": {
        "code": "class parameters:\n    def time_Debye_length(self):\n        Debye_length(5e6*u.K,\n                     5e15*u.m**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_Debye_length",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "738692ff83626978557d053cf8f83915a0363078d6fb7dbeb4b8a2ba22857d49",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_Debye_number": {
        "code": "class parameters:\n    def time_Debye_number(self):\n        Debye_number(5e6*u.K,\n                     5e9*u.cm**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_Debye_number",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "a0d69c083e0eab76e1369bb19f6a90113ea5cabbdc707c18ec6ae27b78580ef3",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_Hall_parameter": {
        "code": "class parameters:\n    def time_Hall_parameter(self):\n        Hall_parameter(1e6 / u.m ** 3,5e6*u.K,0.1*u.T,'He-4 +1')\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_Hall_parameter",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2f02cac4111aa1893720208da759068b0ddb2536154115c2a36813cd7ed4d485",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_gyrofrequency": {
        "code": "class parameters:\n    def time_gyrofrequency(self):\n        gyrofrequency(0.01*u.T,\n                      particle='T+',\n                      to_hz=True)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_gyrofrequency",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3af8460aee11f6e7cc0e1154d9693f4b5fdcbb2da140d313e045afd422f52cb2",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_gyroradius": {
        "code": "class parameters:\n    def time_gyroradius(self):\n        gyroradius(0.2*u.T,\n                   particle='p+',\n                   T_i=1e5*u.K)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_gyroradius",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "93b0912b741d4bc45e52f576191a4c6108dc47cb1d47cd06001e62fa6cb0d2c5",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_inertial_length": {
        "code": "class parameters:\n    def time_inertial_length(self):\n        inertial_length(5 * u.m ** -3,\n                        'He+')\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_inertial_length",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0579d8311cb4cb4a630eec1bcc8ef3d820a76e70d5a2ab5364d4d51ef6c4135a",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_ion_sound_speed": {
        "code": "class parameters:\n    def time_ion_sound_speed(self):\n        ion_sound_speed(T_i=1.3232 * u.MK,\n                        T_e=1.831 * u.MK,\n                        ion='p',\n                        gamma_e=1,\n                        gamma_i=3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_ion_sound_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "ea60944d7daf87ebd4111488b2e7ac85c73fb9b7548df1c62995346cfc1fcbd5",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_kappa_thermal_speed": {
        "code": "class parameters:\n    def time_kappa_thermal_speed(self):\n        kappa_thermal_speed(5*u.eV,\n                            4,\n                            'p',\n                            'mean_magnitude')\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_kappa_thermal_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "24c2a9feaf5cd53b9876403344f85b1bed36669bb19840fe1af8a074b2ea592d",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_lower_hybrid_frequency": {
        "code": "class parameters:\n    def time_lower_hybrid_frequency(self):\n        lower_hybrid_frequency(0.2*u.T,\n                               n_i=5e19*u.m**-3,\n                               ion='D+',\n                               to_hz = True)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_lower_hybrid_frequency",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0f02710d13d5702f2f28d42ab6d48e7bdd559943fe1db47e2faae765e9760068",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_magnetic_energy_density": {
        "code": "class parameters:\n    def time_magnetic_energy_density(self):\n        magnetic_energy_density(0.1*u.T)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_magnetic_energy_density",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "0059cf9f08c4be300849fba1f3616cecb51f0066ea35a30f224a5d8c8fb1efed",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_magnetic_pressure": {
        "code": "class parameters:\n    def time_magnetic_pressure(self):\n        magnetic_pressure(0.1*u.T)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_magnetic_pressure",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "86a8f52fe9c55f8bf9a72c6f31f6b55c9559d6d8da0da8180e9630f34040d5c4",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_mass_density": {
        "code": "class parameters:\n    def time_mass_density(self):\n        mass_density(1 * u.m ** -3,'p')\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_mass_density",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "dae1c91bc88edff8a0a0d3ea511daac04bd55de96b865189c9098b4072e4bdb5",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_plasma_frequency": {
        "code": "class parameters:\n    def time_plasma_frequency(self):\n        plasma_frequency(1e19*u.m**-3,\n                         particle='p',\n                         to_hz=True)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_plasma_frequency",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "f69335d5d32ada2473436653c1e5f24513ab44343ac73ba6900e824761dffd2a",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_thermal_pressure": {
        "code": "class parameters:\n    def time_thermal_pressure(self):\n        thermal_pressure(1*u.eV,\n                         1e20/u.m**3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_thermal_pressure",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "e711f5e9e19f48687a52418735ab6bd64a4d49b588f981b02173de845dfa6a1b",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_thermal_speed": {
        "code": "class parameters:\n    def time_thermal_speed(self):\n        thermal_speed(1 * u.MK)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_thermal_speed",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "188cf82aa8782d1e74c789c8dfe6fab53390f0cdff9d5c0c14106cd796f35be6",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.parameters.time_upper_hybrid_frequency": {
        "code": "class parameters:\n    def time_upper_hybrid_frequency(self):\n        upper_hybrid_frequency(0.2*u.T,\n                               n_e=5e19*u.m**-3,\n                               to_hz = True)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.parameters.time_upper_hybrid_frequency",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "d0e23a4083bd90c3f619365c50ee7011723e0ca952c41f99b4345fd0a8727668",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.quantum.time_Fermi_energy": {
        "code": "class quantum:\n    def time_Fermi_energy(self):\n        Fermi_energy(1e23 * u.cm**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.quantum.time_Fermi_energy",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "857b111bfb61e0fb371355c2b47504263f6b091468b12a8f414e0b10b1b24e81",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.quantum.time_Thomas_Fermi_length": {
        "code": "class quantum:\n    def time_Thomas_Fermi_length(self):\n        Thomas_Fermi_length(1e23 * u.cm**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.quantum.time_Thomas_Fermi_length",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "476146db322149860f5830b3f27875e602ec9e4bc02975165d77d1d6468460ac",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.quantum.time_Wigner_Seitz_radius": {
        "code": "class quantum:\n    def time_Wigner_Seitz_radius(self):\n        Wigner_Seitz_radius(1e29 * u.m**-3)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.quantum.time_Wigner_Seitz_radius",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "dc817b7d80fdaadf0b1d54c4ed2e2edf57fbeb44950e15cb15b5bfb20aa1e215",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.quantum.time_thermal_deBroglie_wavelength": {
        "code": "class quantum:\n    def time_thermal_deBroglie_wavelength(self):\n        thermal_deBroglie_wavelength(1 * u.eV)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.quantum.time_thermal_deBroglie_wavelength",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "3d2ead623cd89e17e00eb87f77b09d53d5af3d145871a9a06ed7d8e94a6035c4",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.relativity.time_Lorentz_factor": {
        "code": "class relativity:\n    def time_Lorentz_factor(self):\n        Lorentz_factor(1.4e8 * u.m / u.s)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.relativity.time_Lorentz_factor",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "53ec665c3c43ecf1c3b0825ea979d8ad486b593f6c48f243a6d614b92248ec0c",
        "warmup_time": -1
    },
    "version": 2
}