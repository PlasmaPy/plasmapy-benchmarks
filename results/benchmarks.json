{
    "benchmark_AtomicSuite.Atomic.time_common_isotopes": {
        "code": "class Atomic:\n    def time_common_isotopes(self):\n        common_isotopes('H')\n        common_isotopes('Fe')\n        common_isotopes('Fe', most_common_only=True)\n        common_isotopes()[0:7]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_common_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "c599e772397507cc1865167b14902c1c63b9c18699cdc725d4f53c206a564603",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_known_isotopes": {
        "code": "class Atomic:\n    def time_known_isotopes(self):\n        known_isotopes('H')\n        known_isotopes('helium 1+')\n        known_isotopes()[0:10]\n        known_isotopes()[4:15]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_known_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "98c888d9f156c11a5ed4c04e7b5efdd9665e81e4ef4d7838da17367c31748ef9",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_reduced_mass": {
        "code": "class Atomic:\n    def time_reduced_mass(self):\n        reduced_mass('p+', 'e-')\n        reduced_mass(5.4e-27 * u.kg, 8.6e-27 * u.kg)\n        reduced_mass(6.4e-10 * u.kg, 8.6e-11 * u.kg)\n        reduced_mass(1.4e-10 * u.kg, 2.6e-40 * u.kg)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_reduced_mass",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "2f2f48dc27c8b9ca8d1eee2454fea060cbca17d5c8b7b0a10bcb913581ebd8ec",
        "warmup_time": -1
    },
    "benchmark_AtomicSuite.Atomic.time_stable_isotopes": {
        "code": "class Atomic:\n    def time_stable_isotopes(self):\n        stable_isotopes('beryllium')\n        stable_isotopes('Pb-209')\n        stable_isotopes(118)\n        stable_isotopes('U', unstable=True)[:5]\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_AtomicSuite.Atomic.time_stable_isotopes",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "aa6132f3e3fc0a64cd47850caaf763bafd382168824538edf9e64b1defb1ea23",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.Dielectric.time_cold_plasma_permittivity_LRP": {
        "code": "class Dielectric:\n    def time_cold_plasma_permittivity_LRP(self):\n        permittivity = S, D, P = cold_plasma_permittivity_LRP(\n                                                             Dielectric.B,\n                                                             Dielectric.species,\n                                                             Dielectric.n,\n                                                             Dielectric.omega)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.Dielectric.time_cold_plasma_permittivity_LRP",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "4f57df109a8998b4aa99137e4beb817fde2cbd29c25e52687b3ccd9f3d84fc16",
        "warmup_time": -1
    },
    "benchmark_PhysicsSuite.Dielectric.time_cold_plasma_permittivity_SDP": {
        "code": "class Dielectric:\n    def time_cold_plasma_permittivity_SDP(self):\n        permittivity = S, D, P = cold_plasma_permittivity_SDP(\n                                                             Dielectric.B,\n                                                             Dielectric.species,\n                                                             Dielectric.n,\n                                                             Dielectric.omega)\n\n    def setup(self):\n        pass",
        "min_run_count": 2,
        "name": "benchmark_PhysicsSuite.Dielectric.time_cold_plasma_permittivity_SDP",
        "number": 0,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "bf0b6dedf663c7486645a75fbe082ba47032005bbe6f60965126dbcfbe174181",
        "warmup_time": -1
    },
    "benchmark_import.ImportSuite.timeraw_import_plasmapy": {
        "code": "class ImportSuite:\n    def timeraw_import_plasmapy(self):\n        return \"\"\"\n        import plasmapy\n        \"\"\"",
        "min_run_count": 2,
        "name": "benchmark_import.ImportSuite.timeraw_import_plasmapy",
        "number": 1,
        "param_names": [],
        "params": [],
        "processes": 2,
        "repeat": 0,
        "sample_time": 0.01,
        "timeout": 60.0,
        "type": "time",
        "unit": "seconds",
        "version": "6fdf0f4643629bcd428f4d67928ee9833bb83ab1780edab32a32400d3728fb64",
        "warmup_time": -1
    },
    "version": 2
}